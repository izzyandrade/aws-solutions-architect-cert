AWSTemplateFormatVersion: 2010-09-09
Description: Example of a NACL in a VPC with an EC2 instance

Parameters:
    ImageId:
        Type: String
        Default: ami-081d377a25d396ece

Resources:
    MyVPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            EnableDnsHostnames: true
            EnableDnsSupport: true
            InstanceTenancy: default
            Tags:
                - Key: Name
                  Value: nacl-example

    MySubnet:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: 10.0.0.0/24
            VpcId: !Ref MyVPC
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: nacl-example

    MySSMRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: ec2.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

    MyEC2InstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
            Roles:
                - !Ref MySSMRole

    MyEC2Instance:
        Type: AWS::EC2::Instance
        Properties:
            IamInstanceProfile: !Ref MyEC2InstanceProfile
            ImageId: !Ref ImageId
            InstanceType: t2.micro
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash -xe

                    # Redirect output to log file
                    exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
                    echo "Starting user data script execution"

                    # Update and install packages
                    sudo yum update -y
                    sudo yum install -y httpd

                    # Start and enable httpd
                    echo "Starting and enabling httpd service"
                    sudo systemctl start httpd
                    sudo systemctl enable httpd
                    sudo systemctl status httpd

                    # Create a test page
                    echo "Creating test page"
                    echo "<html><body><h1>Hello from Apache on Amazon Linux 2!</h1></body></html>" > /var/www/html/index.html
            NetworkInterfaces:
                - DeviceIndex: 0
                  SubnetId: !Ref MySubnet
                  AssociatePublicIpAddress: true
                  GroupSet:
                      - !Ref MySecurityGroup
                  DeleteOnTermination: true
            Tags:
                - Key: Name
                  Value: nacl-example

    MySecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to client host
            VpcId: !Ref MyVPC
            SecurityGroupIngress:
                - IpProtocol: -1
                  FromPort: -1
                  ToPort: -1
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: -1
                  FromPort: -1
                  ToPort: -1
                  CidrIp: 0.0.0.0/0

    # Add Internet Gateway
    MyInternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: nacl-example-igw

    # Attach Internet Gateway to VPC
    AttachGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref MyVPC
            InternetGatewayId: !Ref MyInternetGateway

    # Create Route Table
    MyRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MyVPC
            Tags:
                - Key: Name
                  Value: nacl-example-rt

    # Add Route to Internet Gateway
    MyRoute:
        Type: AWS::EC2::Route
        DependsOn: AttachGateway
        Properties:
            RouteTableId: !Ref MyRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref MyInternetGateway

    # Associate Route Table with Subnet
    MySubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref MySubnet
            RouteTableId: !Ref MyRouteTable

Outputs:
    VpcId:
        Description: ID of the VPC
        Value: !Ref MyVPC
        Export:
            Name: !Sub "${AWS::StackName}-VpcId"
